#!/usr/bin/env python
# -*- coding: utf-8 -*-
import sys

from optparse import OptionParser
import subspacefind
import h5py
import numpy as np

parser = OptionParser()

parser.add_option("-n", "--name",
                  help="dataset name [default=%default]", default="data", type=str)
(options, args) = parser.parse_args()

#h5file = h5py.File(args[0], "r", driver="core")
print "opening:", args[0]
h5file = h5py.File(args[0])#, driver="core")

if options.name not in h5file:
	print "doesn't exist", options.name
	sys.exit(1)
data = h5file[options.name]
minima = np.max(data, axis=1)
maxima = np.min(data, axis=1)
dimension = data.shape[0]
N = data.shape[1]

print ["%.10e" % k for k in maxima]
print "%.10e" % np.max(data[0])
print "%.10e" % np.max(data[1])

print ["%.10e" % k for k in minima]
print "%.10e" % np.min(data[0])
print "%.10e" % np.min(data[1])

#data = data[:10000,:]
#N = 10000
prob = np.zeros(N, dtype=np.float64)

#data = ((np.transpose(data) * 1.)[::,::-1]) * 1.

if dimension == 1:
	print "1d not supported"
	sys.exit(1)
elif dimension == 2:
	k, l = 0, 1
	map = subspacefind.DensityMap2d(
			minima[k]-0.06125*(maxima[k]-minima[k]),
			maxima[k]+0.06125*(maxima[k]-minima[k]),512,
			minima[l]-0.06125*(maxima[l]-minima[l]),
			maxima[l]+0.06125*(maxima[l]-minima[l]),512);
	hscale = 6.0/np.sqrt(N);
	gmean = map.comp_data_probs_2d(hscale*(maxima[k]-minima[k]),
			       hscale*(maxima[l]-minima[l]),
			       data[k], data[l], prob);
    
    
	map.comp_density_2d (hscale*(maxima[k]-minima[k]), hscale*(maxima[l]-minima[l]), gmean,data[k],data[l],prob);
	map.pgm_write("density2d-py.pgm")
	image = np.zeros((512,512), dtype=np.float64)
	map.fill(image)
	import matplotlib.pyplot as plt
	plt.imshow(image)
	#plt.title("Quality: %.2f" % quality[i][j])
	plt.show()
else:
	print ">2d not supported"
	sys.exit(1)
	
	

#Nx = 50
#Ny = 50
#kde = subspacefind.DensityMap2d(0., 1., Nx, 0., 1., Ny);
