#!/usr/bin/env python
# -*- coding: utf-8 -*-
import sys
import os
import platform
darwin = "darwin" in platform.system().lower()
frozen = getattr(sys, 'frozen', False)
if frozen and len(sys.argv) > 1 and sys.argv[1].startswith("-psn"): # is the 'app' is opened in osx, just stars without arguments
	dirname = os.path.join(os.path.dirname(sys.argv[0]), "..", "..", "..")
	os.chdir(dirname)

if darwin and frozen: # on newer osx versions we get a lot of broken pipes when writing to stdout
	directory = os.path.expanduser("~/.vaex")
	if not os.path.exists(directory):
		os.makedirs(directory)
	sys.stdout = open(os.path.expanduser('~/.vaex/stdout.txt'), 'w')
	sys.stderr = open(os.path.expanduser('~/.vaex/stderr.txt'), 'w')

if frozen and not darwin: # pyinstaller
	os.environ["QT_API"] = "pyside" # somehow the new matplotlib under pyinstaller doesn't use pyside

#print darwin, platform.system()



if __name__ == '__main__':
	if frozen and len(sys.argv) > 1 and sys.argv[1].startswith("-psn"): # is the 'app' is opened in osx, just start without arguments
		import vaex.ui.main
		vaex.ui.main.main([])
	else:
		if len(sys.argv) > 1 and sys.argv[1] == "webserver":
			import vaex.webserver
			vaex.webserver.main([os.path.basename(sys.argv[0]) +" " +sys.argv[1]]  + sys.argv[2:])
		elif len(sys.argv) > 1 and sys.argv[1] == "convert":
			import vaex.export
			vaex.export.main([os.path.basename(sys.argv[0]) +" " +sys.argv[1]]  + sys.argv[2:])
		else:
			import vaex.ui.main
			vaex.ui.main.main(sys.argv[1:])
