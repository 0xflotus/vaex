#!/usr/bin/env python
# -*- coding: utf-8 -*-
import numpy as np
import h5py
from optparse import OptionParser
import os
import sys
import astropy.io.votable
import thread

from gavi.samp import Samp

usage = """
Convert VO table from SAMP to hdf5 format:

Example:

gavi-data-samp2hdf5 -o photometry.hdf5

Now open topcat:
topcat -f csv $GAVI_DATA/scl_photo.csv

...

"""
parser = OptionParser(usage=usage)

#parser.add_option("-n", "--name",
 #                 help="dataset name [default=%default]", default="data", type=str)
#parser.add_option("-o", "--output",
#                 help="dataset output filename [by default the suffix of input filename will be replaced by hdf5]", default=None, type=str)
(options, args) = parser.parse_args()

if len(args) != 1:
	print "Program requires output filename as argument"
	sys.exit(1)

hdf5filename = args[0]

def load(url):
	print "parsing table..."
	table = astropy.io.votable.parse_single_table(url)
	print "done parsing table"
	names = table.array.dtype.names
	h5file = h5py.File(hdf5filename, "w", driver="core")
	datagroup = h5file.create_group("data")
	#import pdb
	#pdb.set_trace()
	data = table.array.data
	print "storing data..."
	
	for i in range(len(data.dtype)):
		name = data.dtype.names[i]
		type = data.dtype[i]
		if type.kind  == "f": # only store float
			datagroup.create_dataset(name, data=table.array[name])
	print "storing data done"
	#thread.interrupt_main()
	#sys.exit(0)
	h5file.close()
	samp.client.disconnect()
	#os._exit(0)

#load("http://jansky.intra.astro.rug.nl:39006/dynamic/1/t1.vot")

print "starting SAMP client"
samp = Samp(daemon=True)

	

def on_load_table(url, table_id, name):
	print "loading table", url, table_id, name
	load(url)
	

samp.tableLoadCallbacks.append(on_load_table)
print "waiting for VOtable..."
samp.client.client._thread.join(1)